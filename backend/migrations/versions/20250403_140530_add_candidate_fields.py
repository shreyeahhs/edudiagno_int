
"""add_candidate_fields

Revision ID: 9a397286eda6
Revises: 50e65bbab061
Create Date: 2025-04-03 14:05:30.483296+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9a397286eda6'
down_revision = '50e65bbab061'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_question_responses_id', table_name='question_responses')
    op.drop_table('question_responses')
    op.add_column('candidates', sa.Column('location', sa.String(), nullable=True))
    op.add_column('candidates', sa.Column('linkedin_url', sa.String(), nullable=True))
    op.add_column('candidates', sa.Column('portfolio_url', sa.String(), nullable=True))
    op.add_column('candidates', sa.Column('work_experience', sa.Text(), nullable=True))
    op.add_column('candidates', sa.Column('education', sa.Text(), nullable=True))
    op.add_column('candidates', sa.Column('skills', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('candidates', 'skills')
    op.drop_column('candidates', 'education')
    op.drop_column('candidates', 'work_experience')
    op.drop_column('candidates', 'portfolio_url')
    op.drop_column('candidates', 'linkedin_url')
    op.drop_column('candidates', 'location')
    op.create_table('question_responses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('video_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transcript', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('analysis', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['interview_questions.id'], name='question_responses_question_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='question_responses_pkey')
    )
    op.create_index('ix_question_responses_id', 'question_responses', ['id'], unique=False)
    # ### end Alembic commands ###
